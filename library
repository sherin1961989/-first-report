CREATE DATABASE library;
USE library;
CREATE TABLE Branch (
    Branch_no INT PRIMARY KEY,
    Manager_Id INT,
    Branch_address VARCHAR(100),
    Contact_no VARCHAR(20)  );
    CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(50),
    Position VARCHAR(50),
    Salary INT);
       
  ALTER TABLE Branch ADD CONSTRAINT FOREIGN KEY (Manager_Id) REFERENCES Employee(Emp_Id);
    CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_name VARCHAR(50),
    Customer_address VARCHAR(100),
    Reg_date DATE
);

CREATE TABLE IssueStatus (
    Issue_Id INT PRIMARY KEY,
    Issued_cust INT,
    Issued_book_name VARCHAR(100),
    Issue_date DATE,
    Isbn_book VARCHAR(20),
    FOREIGN KEY (Issued_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book) REFERENCES Books(ISBN)
);


CREATE TABLE ReturnStatus (
    Return_Id INT PRIMARY KEY,
    Return_cust INT,
    Return_book_name VARCHAR(100),
    Return_date DATE,
    Isbn_book2 VARCHAR(20),
    FOREIGN KEY (Return_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book2) REFERENCES Books(ISBN)
);

CREATE TABLE Books (
    ISBN VARCHAR(20) PRIMARY KEY,
    Book_title VARCHAR(100),
    Category VARCHAR(50),
    Rental_Price DECIMAL(10, 2),
    Status VARCHAR(3),
    Author VARCHAR(50),
    Publisher VARCHAR(50)
);
DROP table Employee;
CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(50),
    Position VARCHAR(50),
    Salary int);
INSERT INTO Branch (Branch_no, Manager_Id, Branch_address, Contact_no)
VALUES (1, 101, 'Main Street, City', '123-456-7890'),
       (2, 102, 'Park Avenue, Town', '987-654-3210');

INSERT INTO Employee (Emp_Id, Emp_name, Position, Salary)
VALUES (101, 'John Doe', 'Manager', 60000),
       (102, 'Jane Smith', 'Librarian', 45000);
INSERT INTO Customer (Customer_Id, Customer_name, Customer_address, Reg_date)
VALUES (1001, 'Alice Johnson', '123 Street, City', '2023-01-15'),
       (1002, 'Bob Williams', '456 Avenue, Town', '2022-11-20');

INSERT INTO ReturnStatus (Return_Id, Return_cust, Return_book_name, Return_date, Isbn_book2)
VALUES (3001, 1001, 'Book1', '2023-07-25', 'ISBN1234');

INSERT INTO Books (ISBN, Book_title, Category, Rental_Price, Status, Author, Publisher)
VALUES ('ISBN1234', 'Book1', 'Fiction', 5.99, 'yes', 'Author1', 'Publisher1'),
       ('ISBN5678', 'Book2', 'Mystery', 6.99, 'yes', 'Author2', 'Publisher2');



1.  Retrieve the book title, category, and rental price of all available 
books.

SELECT Book_title, Category, Rental_Price
FROM Books
WHERE Status = 'yes';

2.List the employee names and their respective salaries in descending 
order of salary. 

SELECT Emp_name, Salary
FROM Employee
ORDER BY Salary DESC;
3.Retrieve the book titles and the corresponding customers who have 
issued those books
SELECT b.Book_title, c.Customer_name
FROM IssueStatus i
JOIN Books b ON i.Isbn_book = b.ISBN
JOIN Customer c ON i.Issued_cust = c.Customer_Id;

4.Display the total count of books in each category.
SELECT Category, COUNT(*) AS Total_Count
FROM Books
GROUP BY Category;
5.Retrieve the employee names and their positions for the employees 
whose salaries are above Rs.50,000. 

SELECT Emp_name, Position
FROM Employee
WHERE Salary > 50000;
6.List the customer names who registered before 2022-01-01 and have 
not issued any books yet. 

SELECT Customer_name
FROM Customer
WHERE Reg_date < '2022-01-01'
AND Customer_Id NOT IN (SELECT Issued_cust FROM IssueStatus);

8.Display the names of customers who have issued books in the month 
of June 2023. 
SELECT DISTINCT Customer_name
FROM Customer c
JOIN IssueStatus i ON c.Customer_Id = i.Issued_cust
WHERE EXTRACT(YEAR_MONTH FROM i.Issue_date) = '2023-06';

9.Retrieve book_title from book table containing history. 

SELECT Book_title
FROM Books
WHERE Category LIKE '%history%';


7.Display the branch numbers and the total count of employees in each 
branch

SELECT 
    Branch_no,
    (SELECT COUNT(Emp_Id) FROM Employee WHERE Manager_Id = b.Manager_Id) AS Total_Employees
FROM Branch b;

10.Retrieve the branch numbers along with the count of employees for 
branches having more than 5 employees. 

SELECT 
    b.Branch_no,
    COUNT(e.Emp_Id) AS Total_Employees
FROM Branch b
LEFT JOIN Employee e ON b.Manager_Id = e.Emp_Id
GROUP BY b.Branch_no
HAVING COUNT(e.Emp_Id) > 5;
